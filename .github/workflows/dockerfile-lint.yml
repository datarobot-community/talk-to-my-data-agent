---
name: Dockerfile Lint

on:
  push:
    paths:
      - '**Dockerfile'
      - '**Dockerfile.*'
    branches:
      - main
      - 'release/*'
  pull_request:
    paths:
      - '**Dockerfile'
      - '**Dockerfile.*'
  workflow_dispatch:

jobs:
  hadolint:
    name: lint-dockerfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Check for Dockerfile changes (excluding deletions)
        id: check-dockerfiles
        run: |
          # Get list of Dockerfile files that exist in the current commit
          CURRENT_DOCKERFILES=$(find . -name "Dockerfile*" -type f | sort || true)

          # Get list of Dockerfile files that existed in the previous commit
          PREVIOUS_DOCKERFILES=$(git ls-tree -r --name-only HEAD~1 | grep -E "Dockerfile.*" | sort || true)

          # Find Dockerfile files that exist now but didn't exist before (additions/modifications)
          # Use a safer approach that handles empty inputs
          if [ -n "$CURRENT_DOCKERFILES" ] && [ -n "$PREVIOUS_DOCKERFILES" ]; then
            CHANGED_DOCKERFILES=$(comm -23 <(echo "$CURRENT_DOCKERFILES") <(echo "$PREVIOUS_DOCKERFILES") 2>/dev/null || true)
          elif [ -n "$CURRENT_DOCKERFILES" ]; then
            # If there were no previous Dockerfiles, all current ones are new
            CHANGED_DOCKERFILES="$CURRENT_DOCKERFILES"
          else
            CHANGED_DOCKERFILES=""
          fi

          # Get modified Dockerfile files (excluding deletions)
          # git diff --name-status shows status: A=added, M=modified, D=deleted
          MODIFIED_DOCKERFILES=$(git diff --name-status HEAD~1 HEAD | grep -E "Dockerfile.*" | awk '$1 != "D" {print $2}' 2>/dev/null || true)

          # Combine additions and modifications
          ALL_CHANGES=$(echo -e "$CHANGED_DOCKERFILES\n$MODIFIED_DOCKERFILES" | sort -u | grep -v '^$' || true)

          if [ -n "$ALL_CHANGES" ]; then
            echo "Dockerfile changes detected:"
            echo "$ALL_CHANGES"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No Dockerfile changes detected (only deletions or no changes)"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
      - name: Run Hadolint
        if: steps.check-dockerfiles.outputs.has_changes == 'true'
        uses: hadolint/hadolint-action@v3.3.0
        with:
          recursive: true
