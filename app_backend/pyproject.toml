[project]

name = "app_backend"
version = "0.1.0"
description = "FastAPI Server"
readme = "README.md"
requires-python = ">=3.10,<3.13"
dependencies = [
    "aiofiles==24.1.0",
    "boto3>=1.36.2,<2.0",
    "cryptography>=44.0.0,<45.0",
    "datarobot>=3.6.0,<4.0",
    "datarobot-asgi-middleware>=0.1.0",
    "db-dtypes>=1.3.1,<2.0",
    "duckdb>=1.2.0,<1.3",
    "eval-type-backport>=0.2.2,<1.0",
    "fastapi[standard]>=0.115.6,<1.0",
    "fastexcel>=0.12.1,<1.0",
    "google-auth>=2.37.0,<3.0",
    "google-cloud-bigquery>=3.27.0,<4.0",
    "hdbcli>=2.23.27,<3.0",
    "httpx>=0.23.0,<1.0",
    "instructor>=1.3.4,<2.0",
    "joblib>=1.4.2,<2.0",
    "kaleido>=0.2.1,!=0.2.1.post1,<1.0",
    "lightgbm>=4.5.0,<5.0",
    "numba>=0.61.0,<1.0",
    "numpy>=2.1.3,<3.0",
    "openai>=1.59.9,<2",
    "openpyxl>=3.1.5,<4.0",
    "pandas>=2.2.3,<3.0",
    "plotly>=5.24.1,<6.0",
    "polars>=1.22.0,<2.0",
    "psutil>=6.1.1,<7.0",
    "pyarrow<19.0.0",
    "pydantic==2.7.4,<3.0",
    "pydantic-settings==2.4.0,<3.0",
    "python-dotenv>=1.0.1",
    "python-multipart>=0.0.20,<1.0",
    "scikit-learn>=1.6.1,<2.0",
    "scipy>=1.15.1,<2.0",
    "snowflake-connector-python>=3.12.4,<4.0",
    "snowflake-sqlalchemy>=1.7.3,<2.0",
    "spacy>=3.8.3,<4.0",
    "sqlalchemy>=2.0.37,<3.0",
    "statsmodels>=0.14.4,<1.0",
    "textblob>=0.19.0,<1.0",
    "tslearn>=0.6.3,<1.0",
    "types-aiofiles==24.1.0.20241221",
    "typing-extensions>=4.12.2,<5.0",
    "uvicorn==0.34.0,<1",
]

[project.optional-dependencies]
dev = [
    "pytest-cov>=6.1.1",
    "pytest>=7.4.0",
    "ruff>=0.3.0",
    "mypy>=1.8.0",
    "pydantic>=2.6.1",
]

[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]
include = ["static", "templates"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
strict = true
python_version = "3.11"
plugins = "pydantic.mypy"
exclude = """(?x)(
    output/ # exclude files starting with "output"
    | deployment_.*/
    | include/   # or files starting with "include."
    | venv/
    | .venv/
    | .cache
    | e2e/
  )"""
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
enable_error_code = "ignore-without-code"
implicit_reexport = true
ignore_missing_imports = true
no_implicit_optional = true
show_column_numbers = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "datarobot.*"
implicit_reexport = true
